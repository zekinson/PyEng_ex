# -*- coding: utf-8 -*-
"""
Задание 5.2a

Всё, как в задании 5.2, но, если пользователь ввел адрес хоста, а не адрес сети,
надо преобразовать адрес хоста в адрес сети и вывести адрес сети и маску,
как в задании 5.2.

Пример адреса сети (все биты хостовой части равны нулю):
* 10.0.1.0/24
* 190.1.0.0/16

Пример адреса хоста:
* 10.0.1.1/24 - хост из сети 10.0.1.0/24
* 10.0.5.195/28 - хост из сети 10.0.5.192/28

Если пользователь ввел адрес 10.0.1.1/24, вывод должен быть таким:

Network:
10        0         1         0
00001010  00000000  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000


Проверить работу скрипта на разных комбинациях хост/маска, например:
    10.0.5.195/28, 10.0.1.1/24

Вывод сети и маски должен быть упорядочен также, как в примере:
- столбцами
- ширина столбца 10 символов (в двоичном формате
  надо добавить два пробела между столбцами
  для разделения октетов между собой)


Подсказка:
Есть адрес хоста в двоичном формате и маска сети 28. Адрес сети это первые 28 бит
адреса хоста + 4 ноля.
То есть, например, адрес хоста 10.1.1.195/28 в двоичном формате будет
bin_ip = "00001010000000010000000111000011"

А адрес сети будет первых 28 символов из bin_ip + 0000 (4 потому что всего
в адресе может быть 32 бита, а 32 - 28 = 4)
00001010000000010000000111000000

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""

def dvoih(a):
	a = str(bin(a)[2:])
	while len(a) != 8:
		a = '0' + a
	return a


def des(a):
	a = list(a)
	a.reverse()
	des = 0
	st = 0
	for i in a:
		if i == '0':
			st += 1
			continue
		des += int(i) * 2 ** st
		st += 1 
	return(str(des))


def vevod(a, b):
	print(a[0].ljust(8), a[1].ljust(8), a[2].ljust(8), a[3], sep='  ')
	print(b[0], b[1], b[2], b[3], sep='  ')


ip = input('Введите IP-сети: ')
net = ip.split('/')[0].split('.')
mask = ip.split('/')[1]
# Network
print('Network:')
net_2 = [dvoih(int(num)) for num in net]
net_2 = ''.join(net_2)[:int(mask)] + '0' * (32 - int(mask))
net_2 = [net_2[i * 8:(i + 1) * 8] for i in range(4)]
net = [des(i) for i in net_2]
vevod(net, net_2)
print()
# Mask
print('Mask:')
print('/' + mask)
mask = int(mask)
mask_str = '1' * mask + '0' * (32 - mask)
mask_list = [mask_str[i * 8:(i + 1) * 8] for i in range(4)]
mask_list_des = [des(i) for i in mask_list]
vevod(mask_list_des, mask_list)
